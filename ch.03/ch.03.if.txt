정수 비교

-eq
    같음
    if [ "$a" -eq "$b" ]
-ne
    같지 않음
    if [ "$a" -ne "$b" ]
-gt
    더 큼
    if ["$a" -gt "$b" ]
-ge
    더 크거나 같음
    if [ "$a" -ge "$b" ]
-lt
    더 작음
    if [ "$a" -lt "$b" ]
-le
    더 작거나 같음
    if [ "$a" -le "$b" ]
<
    더 작음(이중 소괄호에서)
    (("$a" < "$b"))
<=
    더 작거나 같음(이중 소괄호에서)
    (("$a" <= "$b"))
>
    더 큼(이중 소괄호에서)
    (("$a" > "$b"))
>=
    더 크거나 같음(이중 소괄호에서)
    (("$a" >= "$b"))


문자열 비교

=
    같음
    if [ "$a" = "$b" ]
==
    같음
    if [ "$a" == "$b" ]
    = 와 동의어입니다.

    [[ $a == z* ]]    # $a 가 "z"로 시작하면 참(패턴 매칭)
    [[ $a == "z*" ]]  # $a 가 z* 와 같다면 참

    [ $a == z* ]      # 파일 globbing이나 낱말 조각남이 일어남
    [ "$a" == "z*" ]  # $a 가 z* 와 같다면 참

    # Thanks, S.C.

!=
    같지 않음
    if [ "$a" != "$b" ]

    이 연산자는 [[ ... ]] 에서 패턴 매칭을 사용합니다.
<
    아스키 알파벳 순서에서 더 작음
    if [[ "$a" < "$b" ]]
    if [ "$a" \< "$b" ]
    "<" 가 [ ] 에서 쓰일 때는 이스케이프를 시켜야 하는 것에 주의하세요.
>
    아스키 알파벳 순서에서 더 큼
    if [[ "$a" > "$b" ]]
    if [ "$a" \> "$b" ]
    ">" 가 [ ] 에서 쓰일 때는 이스케이프를 시켜야 하는 것에 주의하세요.

    이 비교 연산자를 어떻게 응용하는지 예 26-4에서 살펴보세요.
-z
    문자열이 "null"임. 즉, 길이가 0
-n
    문자열이 "null"이 아님.


복합 비교

-a
    논리 and
    exp1 -a exp2 는 exp1 과 exp2 모두 참일 경우에만 참을 리턴합니다.
-o
    논리 or
    exp1 -o exp2 는 exp1 이나 exp2 중 하나라도 참일 경우에 참을 리턴합니다.

이것들은 이중 대괄호에서 쓰이는 Bash 비교 연산자인 &&와 ||와 비슷합니다.
[[ condition1 && condition2 ]]

-o 와 -a 연산자는 test 명령어나 테스트 대괄호안에서 동작합니다.
if [ "$exp1" -a "$exp2" ]

